server {
    listen 8091;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Correct MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Add proper MIME types for JS modules (critical fix)
    types {
        text/html html htm shtml;
        text/css css;
        application/javascript js mjs;  # Added mjs for ES modules
        text/javascript js mjs;         # Backup for older browsers
        application/json json;
        font/woff2 woff2;
        font/woff woff;
        application/font-woff woff;
        image/svg+xml svg svgz;
        image/png png;
        image/jpeg jpeg jpg;
        image/webp webp;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self' http://pocketbase:8090;";

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml application/javascript application/x-javascript text/javascript application/json;
    gzip_disable "MSIE [1-6]\.";

    # Cache static assets with correct MIME type handling
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
        
        # Important: Ensure JS files are served with correct MIME type
        location ~ \.(js|mjs)$ {
            types {
                application/javascript js mjs;
            }
            add_header Content-Type "application/javascript" always;
        }
    }

    # Special handling for Vite-generated assets with hashes
    location ~ \.[\w-]+\.js$ {
        add_header Content-Type "application/javascript" always;
    }

    # Serve regular files and fallback only if not found
    location / {
        try_files $uri $uri/ @vite_fallback;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Fallback for SPA routes (e.g., /dashboard)
    location @vite_fallback {
        rewrite ^ /index.html;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}